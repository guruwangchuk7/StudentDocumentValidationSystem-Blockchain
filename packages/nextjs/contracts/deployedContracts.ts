/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    Certificate: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifierAddress",
              type: "address",
            },
          ],
          name: "addVerifier",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "certificates",
          outputs: [
            {
              internalType: "bytes32",
              name: "certificateId",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "studentFullName",
              type: "string",
            },
            {
              internalType: "string",
              name: "gender",
              type: "string",
            },
            {
              internalType: "string",
              name: "dateOfBirth",
              type: "string",
            },
            {
              internalType: "string",
              name: "degreeName",
              type: "string",
            },
            {
              internalType: "string",
              name: "graduationDate",
              type: "string",
            },
            {
              internalType: "string",
              name: "universityName",
              type: "string",
            },
            {
              internalType: "string",
              name: "certificateFileCID",
              type: "string",
            },
            {
              internalType: "address",
              name: "studentAddress",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "cidToCertificateId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "certificateId",
              type: "bytes32",
            },
          ],
          name: "getCertificate",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "certificateId",
                  type: "bytes32",
                },
                {
                  internalType: "string",
                  name: "studentFullName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "gender",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "dateOfBirth",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "degreeName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "graduationDate",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "universityName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "certificateFileCID",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "studentAddress",
                  type: "address",
                },
              ],
              internalType: "struct Certificate.StudentCertificate",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "cidBytes",
              type: "bytes32",
            },
          ],
          name: "getCertificateByCID",
          outputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "certificateId",
                  type: "bytes32",
                },
                {
                  internalType: "string",
                  name: "studentFullName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "gender",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "dateOfBirth",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "degreeName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "graduationDate",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "universityName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "certificateFileCID",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "studentAddress",
                  type: "address",
                },
              ],
              internalType: "struct Certificate.StudentCertificate",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "student",
              type: "address",
            },
          ],
          name: "getStudentCertificates",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_certificateId",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "_studentFullName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_gender",
              type: "string",
            },
            {
              internalType: "string",
              name: "_dateOfBirth",
              type: "string",
            },
            {
              internalType: "string",
              name: "_degreeName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_graduationDate",
              type: "string",
            },
            {
              internalType: "string",
              name: "_universityName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_certificateFileCID",
              type: "string",
            },
            {
              internalType: "address",
              name: "_studentAddress",
              type: "address",
            },
          ],
          name: "issueCertificate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "studentCertificates",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "universityAdmin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "verifiers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 1,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
